<%- include('headers.ejs'); %>
	<!-- Layout wrapper -->
  <div class="layout-wrapper layout-2">
    <div class="layout-inner">

      <!-- Layout sidenav -->
      <div id="layout-sidenav" class="layout-sidenav sidenav sidenav-vertical bg-dark">

        <!-- Brand demo (see assets/css/demo/demo.css) -->
        <div class="app-brand demo">
					<img src="https://cdn.glitch.global/2b7c1788-df0a-46c2-9fd0-ff2ef560081f/logo-sm.png" alt="" class="app-brand-logo ui-w-40">
	
					<a href="https://tankmate.ml" target="_blank" class="app-brand-text demo sidenav-text font-weight-normal ml-2">Tankmate</a>
					<a href="javascript:void(0)" class="layout-sidenav-toggle sidenav-link text-large ml-auto">
						<i class="ion ion-md-menu align-middle"></i>
					</a>
				</div>

        <div class="sidenav-divider mt-0"></div>

        <!-- Links -->
        <ul class="sidenav-inner py-1">
					<li class="sidenav-item">
						<a href="/tank/list" class="sidenav-link">
							<i class="sidenav-icon fas fa-snowplow"></i>
							<div>Tanks</div>
						</a>
					</li>
					
					
						<li class="sidenav-item">
							<a href="/member/list" class="sidenav-link">
								<i class="sidenav-icon fas fa-users"></i>
								<div>Members</div>
							</a>
						</li>

						<li class="sidenav-item active">
							<a href="/map/list" class="sidenav-link">
								<i class="sidenav-icon fas fa-map"></i>
								<div>Maps</div>
							</a>
						</li>
	
						

						<li class="sidenav-item">
							<a href="/role/list" class="sidenav-link">
								<i class="sidenav-icon fas fa-th-list"></i>
								<div>Roles</div>
							</a>
						</li>

						<li class="sidenav-item">
							<a href="/settings/view" class="sidenav-link">
								<i class="sidenav-icon fas fa-cogs"></i>
								<div>Settings</div>
							</a>
						</li>

						
					<li class="sidenav-item">
						<a href="/game-audit" class="sidenav-link">
							<i class="sidenav-icon fas fa-archive"></i>
							<div>Audit: Game</div>
						</a>
					</li>

					<li class="sidenav-item">
						<a href="/server-audit" class="sidenav-link">
							<i class="sidenav-icon fas fa-archive"></i>
							<div>Audit: Server</div>
						</a>
					</li>
                       
					<li class="sidenav-divider mb-1"></li>
					
          <li class="sidenav-item">
            <a href="/profile" class="sidenav-link"><i class="sidenav-icon fas fa-user"></i>
              <div>My Profile</div>
            </a>
          </li>

					<li class="sidenav-item">
            <a href="/changepassword" class="sidenav-link"><i class="sidenav-icon fas fa-key"></i>
              <div>Change Password</div>
            </a>
          </li>
        </ul>
      </div>
      <!-- / Layout sidenav -->

      <!-- Layout container -->
      <div class="layout-container">
        <!-- Layout navbar -->
        <nav class="layout-navbar navbar navbar-expand-lg align-items-lg-center bg-white container-p-x" id="layout-navbar">
         
          <!-- Sidenav toggle (see assets/css/demo/demo.css) -->
          <div class="layout-sidenav-toggle navbar-nav d-lg-none align-items-lg-center mr-auto">
            <a class="nav-item nav-link px-0 mr-lg-4" href="javascript:void(0)">
              <i class="ion ion-md-menu text-large align-middle"></i>
            </a>
          </div>

          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#layout-navbar-collapse">
            <span class="navbar-toggler-icon"></span>
          </button>

          <div class="navbar-collapse collapse" id="layout-navbar-collapse">
            <!-- Divider -->
            <hr class="d-lg-none w-100 my-2">            
            <div class="navbar-nav align-items-lg-center ml-auto">                                        
              <div class="demo-navbar-user nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" data-toggle="dropdown">
                  <span class="d-inline-flex flex-lg-row align-items-center align-middle">                    
                    <i class="sidenav-icon fas fa-user"></i>
                    <span class="px-1 mr-lg-2 ml-2 ml-lg-0"><%= user.username %></span>
                  </span>
                </a>
                <div class="dropdown-menu dropdown-menu-right">
                  <a href="/profile" class="dropdown-item"><i class="fas fa-user text-light"></i> &nbsp; My Profile</a>
									<a href="/changepassword" class="dropdown-item"><i class="fas fa-key text-light"></i> &nbsp; Change Password</a>
                  <div class="dropdown-divider"></div>
                  <a href="/logout" class="dropdown-item"><i class="ion ion-ios-log-out text-danger"></i> &nbsp; Log Out</a>
                </div>
              </div>
            </div>

          </div>
        </nav>
        <!-- / Layout navbar -->



        <!-- Layout content -->
        <div class="layout-content">
          <!-- Content -->
          <div class="container-fluid flex-grow-1 container-p-y"> 
						<div id="messagePanel" class="alert alert-danger alert-dismissible fade show" style="visibility: hidden;">
							<button type="button" class="close" data-dismiss="alert">×</button>
						</div>

            <div class="card mb-4">
              <h6 class="card-header">
                Map Details: New
              </h6>
              <div class="card-body">					
								<form id="submitForm" action="/map/create" method="POST">
									<div class="form-group row">
                    <label class="col-form-label col-sm-2 text-sm-right">
											Name:<span class="required">*</span>
										</label>										
                    <div class="col-sm-10">
											<input type="text" id="mapName" name="mapName" maxlength="20" required class="form-control" />
											<span data-validation-for="mapName" class="field-error"></span>
                    </div>
                  </div>

									<div class="form-group row">
                    <label class="col-form-label col-sm-2 text-sm-right">
											Cells Count:
										</label>										
                    <div class="col-sm-10">
                      <span id="cellsCount" class="badge badge-warning" style="margin-top: 10px;">0/<%=maxCells%></span>
                    </div>
                  </div>

									<div class="form-group row">
                    <label class="col-form-label col-sm-2 text-sm-right">
											Map Data:<span class="required">*</span>
										</label>										
                    <div class="col-sm-10">
											<% 
												let index = 0;
											%>
											<% for (let row=0; row < yGrids; row++) { %>
												<div class="map-table">
												<% for (let col=0; col < xGrids; col++) { %>
													<div id="cell-<%=index++%>" class="map-table-cell" data-selected="0" data-x="<%=col%>" data-y="<%=row%>">													
													</div>
												<% } %>
												</div>
											<% } %>
										
											<span data-validation-for="mapData" class="field-error"></span>
                    </div>
                  </div>
						
									<div class="form-group row">
                    <label class="col-form-label col-sm-2 text-sm-right"></label>
                    <div class="col-sm-10">
                      <input type="submit" name="submit" value="Submit Map" class="btn btn-primary" />

											&nbsp;
											<a class="btn btn-outline-secondary" href="/map/list">
												Cancel
											</a>
                    </div>
                  </div>
								</form>
              </div>
            </div>

          </div>
          <!-- / Content -->

          <!-- Layout footer -->
          <nav class="layout-footer footer bg-footer-theme">
            <div class="container-fluid d-flex flex-wrap justify-content-between text-center container-p-x pb-3">
              <div class="pt-3">
                <span class="footer-text font-weight-bolder">Tankmate</span> ©
              </div>              
            </div>
          </nav>
          <!-- / Layout footer -->
        </div>
        <!-- Layout content -->
      </div>
      <!-- / Layout container -->
    </div>

    <!-- Overlay -->
    <div class="layout-overlay layout-sidenav-toggle"></div>
  </div>
  <!-- / Layout wrapper -->

	<script>
		const maxCells = parseInt("<%=maxCells%>");
		let cellsCount = 0;

		$(document).ready(function(){
			document.querySelectorAll(".map-table-cell").forEach((elem) => {
				elem.addEventListener("click", (e) => {
					// console.log(e.currentTarget);
					// id: cell-0, cell-1, etc
					// dataset.x, dataset.y
				
					const cell = e.currentTarget;
					const selected = parseInt(cell.dataset.selected);

					if (selected){
						cellsCount--;
						cell.dataset.selected = "0";
						// cell.style.backgroundColor = "transparent";
						cell.classList.remove("selected-cell");
					} else {			
							// =========================================================
							// Max cells check.
							// =========================================================
							if (cellsCount >= maxCells){
								const msg = `Max number of cells reached: ${maxCells}.`;
								try {          
									$.growl.error({
											title: 'Create Map',
											message: msg,
											location: 'tc'
										});
								} catch (err){
									console.log(err);
								}  
								return;
							}
							// =========================================================

						cellsCount++;			
						cell.dataset.selected = "1";
						// cell.style.backgroundColor = "rgba(125,125,125,0.5)";
						cell.classList.add("selected-cell");
					}
					
					document.getElementById("cellsCount").innerText = `${cellsCount}/${maxCells}`;
				});
			});
		});

		function getMapData() {
			let mapData = {
				mapName: getValueById('mapName'),
				xGrids: 40,
				yGrids: 40,
				cells: []
			}

			document.querySelectorAll(".map-table-cell").forEach((elem) => {
				if (parseInt(elem.dataset.selected)){
					const cell = {
						x: parseInt(elem.dataset.x),
						y: parseInt(elem.dataset.y)
					};
					mapData.cells.push(cell);
				}				
			});

			return mapData;
		}

		// Attach a submit handler to the form
		$("#submitForm").submit(function(event) {
		  	// Stop form from submitting normally
		  	event.preventDefault();
			$('input[type="submit"]').prop('disabled', true);
			
			const url = document.getElementById('submitForm').getAttribute('action');

			// const data = {
			// 	mapName: getValueById('mapName'),
			// 	mapData: getMapData()
			// };

			const data = getMapData();

			$.ajax({
				type: 'POST',
				data: JSON.stringify(data),
				contentType: 'application/json',
				url: url,								
			})
			.done(
				function(data, textStatus, jqXHR){
					toggleValidationErrors({});

					if (data.redirectUrl){
						window.location.href = data.redirectUrl;
					}
				}
			)
			.fail(
				function(jqXHR, textStatus, errorThrown){
					if (jqXHR.responseJSON){
						toggleValidationErrors(jqXHR.responseJSON);
						const msg = jqXHR.responseJSON ? jqXHR.responseJSON.message : errorThrown;
						showMessagePanel(msg);
					}
					else {
						if (textStatus === 'error'){
							showMessagePanel('Unknown error.');
						}
					}
				}
			).always(
					function(){
						$('input[type="submit"]').prop('disabled', false);
					}
			);
		});

		function getValueById(elementId){
			return document.getElementById(elementId).value;
		}

		function showMessagePanel(message){
			if (message){
				const element = document.getElementById('messagePanel');
				if (element){
					element.style.visibility = 'visible';
					element.textContent = message;
				}
			}
		}

		function toggleValidationErrors(responseJSON){
			if (responseJSON){
				const errorDetails = responseJSON.errorDetails || {};
				const validationErrorFields = document.querySelectorAll('span[data-validation-for]');

				Array.from(validationErrorFields).forEach((element, index) => {
					if (errorDetails[element.dataset.validationFor]){
						element.textContent = errorDetails[element.dataset.validationFor].message;
					} else {
						element.textContent = '';
					}
				});
			}
		}
	</script>
<%- include('footer'); %>
